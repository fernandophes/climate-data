services:
  rabbitmq:
    container_name: rabbitmq-climate
    image: rabbitmq:3.11.28-management-alpine
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/conf.d/10-defaults.conf
      - ./definitions.json:/etc/rabbitmq/definitions.json
    environment:
      - RABBITMQ_DEFAULT_USER=brokeradmin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - climate-data
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  drone-norte:
    build:
      context: ./drone
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DRONE_NAME=Norte
      - DRONE_PORT=8081
      - DRONE_DELIMITER=-
      - DRONE_START=(
      - DRONE_END=)
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
      - MQ_USERNAME=drones
      - MQ_PASSWORD=123456
    ports:
      - "8081:8080"
    networks:
      - climate-data

  drone-sul:
    build:
      context: ./drone
      dockerfile: Dockerfile
      args:
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DRONE_NAME=Sul
      - DRONE_PORT=8082
      - DRONE_DELIMITER=;
      - DRONE_START=(
      - DRONE_END=)
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
      - MQ_USERNAME=drones
      - MQ_PASSWORD=123456
    ports:
      - "8082:8080"
    networks:
      - climate-data

  drone-leste:
    build:
      context: ./drone
      dockerfile: Dockerfile
      args:
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DRONE_NAME=Leste
      - DRONE_PORT=8083
      - DRONE_DELIMITER=,
      - DRONE_START={
      - DRONE_END=}
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
      - MQ_USERNAME=drones
      - MQ_PASSWORD=123456
    ports:
      - "8083:8080"
    networks:
      - climate-data

  drone-oeste:
    build:
      context: ./drone
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DRONE_NAME=Oeste
      - DRONE_PORT=8084
      - DRONE_DELIMITER=#
      - DRONE_START=[
      - DRONE_END=]
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
      - MQ_USERNAME=drones
      - MQ_PASSWORD=123456
    ports:
      - "8084:8080"
    networks:
      - climate-data

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - GATEWAY_PORT=8091
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
      - MQ_USERNAME=drones
      - MQ_PASSWORD=123456
    ports:
      - "8091:8080"
    networks:
      - climate-data

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local

networks:
  climate-data:
    name: climate-data
    driver: bridge
